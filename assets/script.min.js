let ComponentMain={data:()=>({message:""}),methods:{logout:function(){ApiRequest("logout",null,this,(function(t){MtData.session=!1}))},say:function(){ApiRequest("say",{message:document.getElementById("messageEditor").value},this,(function(t){t.status}))}},template:'\n<div id="actions" class="card mb-3">\n  <div class="card-body">\n    <div class="d-flex justify-content-between">\n      <div>\n        no actions yet\n      </div>\n      <div>\n        <a class="btn btn-secondary" @click="logout();">Logout</a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div>\n  <label for="messageEditor" class="form-label fw-bold">Message:</label>\n  <textarea class="form-control" id="messageEditor" rows="10" placeholder="Message text"></textarea>\n  <a class="btn btn-success mt-3" @click="say()">Say</a>\n</div>\n'},ComponentMessage={props:{body:String,kind:{type:String,default:"primary"}},template:"\n<div v-if=\"body\" :class=\"['mb-3', 'alert', 'alert-' + kind]\" role=\"alert\">\n  {{body}}\n</div>"},ComponentAuth={data:()=>({count:0}),methods:{password:function(){ApiRequest("password",{password:document.getElementById("password").value},this,(function(t){"ok"==t.status?MtData.session=!0:document.getElementById("password").value=""}))}},template:'\n<div class="mb-3">\n  <label for="password" class="form-label">Password please</label>\n  <input type="password" class="form-control" id="password" @keyup.enter="password();">\n</div>\n<a class="btn btn-success" @click="password();">Authorize</a>\n'};var MtData={session:mtAuth,message:{body:"",kind:"primary"}};function ApiRequest(t,e,s,a){fetch("/api/"+t,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e??{})}).then((t=>t.json())).then((function(t){"ok"==t.status?MtData.message.kind="success":MtData.message.kind=t.status,MtData.message.body=t.message??"",a.call(s,t)}))}Vue.createApp({delimiters:["[[","]]"],components:{ComponentMessage:ComponentMessage,ComponentMain:ComponentMain,ComponentAuth:ComponentAuth},data:()=>MtData=Vue.reactive(MtData)}).mount("#app");