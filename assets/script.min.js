let ComponentMessage={props:["m","replymode"],template:'\n<div class="card">\n  <div class="card-header">\n    <div class="d-flex justify-content-between">\n      <div>\n        <span class="fw-bold">{{m.user}}</span><span class="small text-muted ms-3">{{m.date}}</span>\n      </div>\n      <div>\n        <a :class="[\'btn-\' + (replymode ? \'warning\' : \'primary\')]" class="btn btn-sm" @click="$parent.set_reply_message(replymode ? null : m);" v-text="replymode ? \'Unset\' : \'Reply\'"></a>\n      </div>\n    </div>\n  </div>\n  <div class="card-body">\n    {{m.message}}\n  </div>\n</div>'},ComponentMain={data:()=>({messages:[],reply:null,editor:ClassicEditor,editorData:"",editorConfig:{}}),components:{ComponentMessage:ComponentMessage},methods:{set_reply_message:function(s){this.reply=s},logout:function(){ApiRequest("logout",null,this,(function(s){MtData.session=!1}))},say:function(){let s={message:this.editorData,reply_to:this.reply?.message_id,silent:document.getElementById("silentCheck")?.checked?1:0};s.message?(ApiRequest("say",s,this),this.editorData="",this.reply=null,MtData.status.kind="info",MtData.status.body=""):(MtData.status.kind="warning",MtData.status.body="Empty message!")},list_messages:function(){ApiRequest("list_messages",null,this,(function(s){"ok"==s.status&&(this.messages=s.list,0==s.list.length&&(MtData.status.kind="info",MtData.status.body="Empty messages list received ("+(new Date).toLocaleString()+")."))}))}},template:'\n<div id="actions" class="card mb-3">\n  <div class="card-body">\n    <div class="d-flex justify-content-between">\n      <div>\n        <a class="btn btn-primary" @click="list_messages();">Get Latest Messages</a>\n      </div>\n      <div>\n        <a class="btn btn-secondary" @click="logout();">Logout</a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id="send" class="card">\n  <div class="card-body">\n    <div v-if="reply" class="mb-3">\n      <h5 class="card-title">In Reply to:</h5>\n      <component-message v-bind:m="reply" v-bind:replymode="true"></component-message>\n    </div>\n\n    <h5 class="card-title">Say:</h5>\n    <ckeditor :editor="editor" v-model="editorData" :config="editorConfig" id="messageEditor"></ckeditor>\n    <div class="form-check">\n      <input class="form-check-input" type="checkbox" value="" id="silentCheck">\n      <label class="form-check-label" for="silentCheck">\n        Silent Message\n      </label>\n    </div>\n    <a class="btn btn-success mt-3" @click="say()">Say</a>\n  </div>\n</div>\n\n<div id="messages" class="card mt-3" v-if="messages.length > 0">\n  <div class="card-body">\n    <h5 class="card-title">Latest messages from chat</h5>\n    <component-message v-bind:m="m" v-for="m in messages" :key="m.message_id" v-bind:replymode="false"></component-message>\n  </div>\n</div>\n'},ComponentStatus={props:{body:String,kind:{type:String,default:"primary"}},template:'\n<div v-if="body" class="mb-3 alert" :class="[\'alert-\' + kind]" role="alert">\n  {{body}}\n</div>'},ComponentAuth={data:()=>({count:0}),methods:{password:function(){ApiRequest("password",{password:document.getElementById("password").value},this,(function(s){"ok"==s.status?MtData.session=!0:document.getElementById("password").value=""}))}},template:'\n<div class="mb-3">\n  <label for="password" class="form-label">Password please</label>\n  <input type="password" class="form-control" id="password" @keyup.enter="password();">\n</div>\n<a class="btn btn-success" @click="password();">Authorize</a>\n'};var MtData={session:mtAuth,status:{body:"",kind:"primary"}};function ApiRequest(s,t,e,n){fetch("/api/"+s,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t??{})}).then((s=>s.json())).then((function(s){"ok"==s.status?MtData.status.kind="success":MtData.status.kind=s.status,MtData.status.body=s.message??"","function"==typeof n&&n.call(e,s)}))}Vue.createApp({delimiters:["[[","]]"],components:{ComponentStatus:ComponentStatus,ComponentAuth:ComponentAuth,ComponentMain:ComponentMain},data:()=>MtData=Vue.reactive(MtData)}).use(CKEditor).mount("#app");